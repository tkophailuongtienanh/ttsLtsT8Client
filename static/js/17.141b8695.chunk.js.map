{"version":3,"sources":["components/Typography/SectionTitle.js","pages/Tables.js"],"names":["SectionTitle","_ref","children","React","createElement","className","response2","response","concat","Tables","pageTable1","setPageTable1","useState","pageTable2","setPageTable2","dataTable1","setDataTable1","dataTable2","setDataTable2","totalResults","length","useEffect","slice","Fragment","PageTitle","CTA","TableContainer","Table","TableHeader","TableCell","TableBody","map","user","i","TableRow","key","Avatar","src","avatar","alt","name","job","amount","Badge","type","status","Date","date","toLocaleDateString","TableFooter","Pagination","resultsPerPage","onChange","p","label","Button","layout","size","aria-label","EditIcon","aria-hidden","TrashIcon"],"mappings":"6IAAA,oBAMeA,IAJf,SAAqBC,GAAgB,IAAf,SAAEC,GAAUD,EAChC,OAAOE,IAAAC,cAAA,MAAIC,UAAU,+DAA+DH,K,iCCHtF,gFAsBA,MAAMI,EAAYC,IAASC,OAAO,IA6JnBC,UA3Jf,WAUE,MAAOC,EAAYC,GAAiBC,mBAAS,IACtCC,EAAYC,GAAiBF,mBAAS,IAGtCG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAYC,GAAiBN,mBAAS,IAIvCO,EAAeZ,IAASa,OAwB9B,OAVAC,oBAAU,KACRL,EAAcT,IAASe,MAhBF,IAgBSZ,EAAa,GAhBtB,GAgB2CA,KAC/D,CAACA,IAIJW,oBAAU,KACRH,EAAcZ,EAAUgB,MAtBH,IAsBUT,EAAa,GAtBvB,GAsB4CA,KAChE,CAACA,IAGFV,IAAAC,cAAAD,IAAAoB,SAAA,KACEpB,IAAAC,cAACoB,IAAS,KAAC,UAEXrB,IAAAC,cAACqB,IAAG,MAEJtB,IAAAC,cAACJ,IAAY,KAAC,gBACdG,IAAAC,cAACsB,iBAAc,CAACrB,UAAU,QACxBF,IAAAC,cAACuB,QAAK,KACJxB,IAAAC,cAACwB,cAAW,KACVzB,IAAAC,cAAA,UACED,IAAAC,cAACyB,YAAS,KAAC,UACX1B,IAAAC,cAACyB,YAAS,KAAC,UACX1B,IAAAC,cAACyB,YAAS,KAAC,UACX1B,IAAAC,cAACyB,YAAS,KAAC,UAGf1B,IAAAC,cAAC0B,YAAS,KACPf,EAAWgB,IAAI,CAACC,EAAMC,IACrB9B,IAAAC,cAAC8B,WAAQ,CAACC,IAAKF,GACb9B,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAAA,OAAKC,UAAU,6BACbF,IAAAC,cAACgC,SAAM,CAAC/B,UAAU,uBAAuBgC,IAAKL,EAAKM,OAAQC,IAAI,gBAC/DpC,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGC,UAAU,iBAAiB2B,EAAKQ,MACnCrC,IAAAC,cAAA,KAAGC,UAAU,4CAA4C2B,EAAKS,QAIpEtC,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAAA,QAAMC,UAAU,WAAU,KAAG2B,EAAKU,SAEpCvC,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAACuC,QAAK,CAACC,KAAMZ,EAAKa,QAASb,EAAKa,SAElC1C,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAAA,QAAMC,UAAU,WAAW,IAAIyC,KAAKd,EAAKe,MAAMC,2BAMzD7C,IAAAC,cAAC6C,cAAW,KACV9C,IAAAC,cAAC8C,aAAU,CACT/B,aAAcA,EACdgC,eAtEa,GAuEbC,SAnEV,SAA4BC,GAC1B1C,EAAc0C,IAmENC,MAAM,uBAKZnD,IAAAC,cAACJ,IAAY,KAAC,sBACdG,IAAAC,cAACsB,iBAAc,CAACrB,UAAU,QACxBF,IAAAC,cAACuB,QAAK,KACJxB,IAAAC,cAACwB,cAAW,KACVzB,IAAAC,cAAA,UACED,IAAAC,cAACyB,YAAS,KAAC,UACX1B,IAAAC,cAACyB,YAAS,KAAC,UACX1B,IAAAC,cAACyB,YAAS,KAAC,UACX1B,IAAAC,cAACyB,YAAS,KAAC,QACX1B,IAAAC,cAACyB,YAAS,KAAC,aAGf1B,IAAAC,cAAC0B,YAAS,KACPb,EAAWc,IAAI,CAACC,EAAMC,IACrB9B,IAAAC,cAAC8B,WAAQ,CAACC,IAAKF,GACb9B,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAAA,OAAKC,UAAU,6BACbF,IAAAC,cAACgC,SAAM,CAAC/B,UAAU,uBAAuBgC,IAAKL,EAAKM,OAAQC,IAAI,gBAC/DpC,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGC,UAAU,iBAAiB2B,EAAKQ,MACnCrC,IAAAC,cAAA,KAAGC,UAAU,4CAA4C2B,EAAKS,QAIpEtC,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAAA,QAAMC,UAAU,WAAU,KAAG2B,EAAKU,SAEpCvC,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAACuC,QAAK,CAACC,KAAMZ,EAAKa,QAASb,EAAKa,SAElC1C,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAAA,QAAMC,UAAU,WAAW,IAAIyC,KAAKd,EAAKe,MAAMC,uBAEjD7C,IAAAC,cAACyB,YAAS,KACR1B,IAAAC,cAAA,OAAKC,UAAU,+BACbF,IAAAC,cAACmD,SAAM,CAACC,OAAO,OAAOC,KAAK,OAAOC,aAAW,QAC3CvD,IAAAC,cAACuD,WAAQ,CAACtD,UAAU,UAAUuD,cAAY,UAE5CzD,IAAAC,cAACmD,SAAM,CAACC,OAAO,OAAOC,KAAK,OAAOC,aAAW,UAC3CvD,IAAAC,cAACyD,YAAS,CAACxD,UAAU,UAAUuD,cAAY,gBAQzDzD,IAAAC,cAAC6C,cAAW,KACV9C,IAAAC,cAAC8C,aAAU,CACT/B,aAAcA,EACdgC,eA/Ha,GAgIbC,SAvHV,SAA4BC,GAC1BvC,EAAcuC,IAuHNC,MAAM","file":"static/js/17.141b8695.chunk.js","sourcesContent":["import React from 'react'\n\nfunction SectionTitle({ children }) {\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\n}\n\nexport default SectionTitle\n","import React, { useState, useEffect } from 'react'\n\nimport PageTitle from '../components/Typography/PageTitle'\nimport SectionTitle from '../components/Typography/SectionTitle'\nimport CTA from '../components/CTA'\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableFooter,\n  TableContainer,\n  Badge,\n  Avatar,\n  Button,\n  Pagination,\n} from '@windmill/react-ui'\nimport { EditIcon, TrashIcon } from '../icons'\n\nimport response from '../utils/demo/tableData'\n// make a copy of the data, for the second table\nconst response2 = response.concat([])\n\nfunction Tables() {\n  /**\n   * DISCLAIMER: This code could be badly improved, but for the sake of the example\n   * and readability, all the logic for both table are here.\n   * You would be better served by dividing each table in its own\n   * component, like Table(?) and TableWithActions(?) hiding the\n   * presentation details away from the page view.\n   */\n\n  // setup pages control for every table\n  const [pageTable1, setPageTable1] = useState(1)\n  const [pageTable2, setPageTable2] = useState(1)\n\n  // setup data for every table\n  const [dataTable1, setDataTable1] = useState([])\n  const [dataTable2, setDataTable2] = useState([])\n\n  // pagination setup\n  const resultsPerPage = 10\n  const totalResults = response.length\n\n  // pagination change control\n  function onPageChangeTable1(p) {\n    setPageTable1(p)\n  }\n\n  // pagination change control\n  function onPageChangeTable2(p) {\n    setPageTable2(p)\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setDataTable1(response.slice((pageTable1 - 1) * resultsPerPage, pageTable1 * resultsPerPage))\n  }, [pageTable1])\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setDataTable2(response2.slice((pageTable2 - 1) * resultsPerPage, pageTable2 * resultsPerPage))\n  }, [pageTable2])\n\n  return (\n    <>\n      <PageTitle>Tables</PageTitle>\n\n      <CTA />\n\n      <SectionTitle>Simple table</SectionTitle>\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Client</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {dataTable1.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar className=\"hidden mr-3 md:block\" src={user.avatar} alt=\"User avatar\" />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>{user.status}</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            onChange={onPageChangeTable1}\n            label=\"Table navigation\"\n          />\n        </TableFooter>\n      </TableContainer>\n\n      <SectionTitle>Table with actions</SectionTitle>\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Client</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Actions</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {dataTable2.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar className=\"hidden mr-3 md:block\" src={user.avatar} alt=\"User avatar\" />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>{user.status}</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center space-x-4\">\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            onChange={onPageChangeTable2}\n            label=\"Table navigation\"\n          />\n        </TableFooter>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default Tables\n"],"sourceRoot":""}