{"version":3,"sources":["assets/img/login-office.jpeg","assets/img/login-office-dark.jpeg","pages/Authen/ConfirmEmail.js"],"names":["module","exports","ConfirmEmail","addToast","useToast","lastSent","setLastSent","useState","timeRemaining","setTimeRemaining","optRef","useRef","btnRef","navigate","Cookie","get","useNavigate","useEffect","resendEmail","calculateTimeRemaining","elapsed","Date","now","remaining","parseInt","Math","max","disableRightBtn","enableRightBtn","interval","setInterval","clearInterval","async","response","getWithAuth","data","code","message","errorCode","fetchData","React","createElement","className","aria-hidden","src","ImageLight","alt","ImageDark","Label","ref","placeholder","onClick","disabled","fetchWithAuth","method","body","current","value","error","console"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,iCCA3C,gIAoJeC,UAxIf,WACE,MAAM,SAAEC,GAAaC,eACdC,EAAUC,GAAeC,mBAAS,OAClCC,EAAeC,GAAoBF,mBAAS,GAC7CG,EAASC,iBAAO,IAChBC,EAASD,mBAETE,GADQC,IAAOC,IAAI,SACRC,eAsBjBC,oBAAU,KACRC,KACC,IACHD,oBAAU,KACR,MAAME,EAAyBA,KAC7B,GAAId,EAAU,CACZ,MAAMe,EAAUC,KAAKC,MAAQjB,EACvBkB,EAAYC,SAASC,KAAKC,IAAI,EAAG,IAAQN,GAAW,KAC1DX,EAAiBc,GACbA,EAAY,EACdI,YAAgBf,GAEhBgB,YAAehB,KAKrBO,IACA,MAAMU,EAAWC,YAAY,KAC3BX,KACC,KAEH,MAAO,IAAMY,cAAcF,IAC1B,CAACxB,IACJ,MAAMa,EAAcA,KAClB,GAAIV,EAAgB,EAClB,OAEgBwB,WAChB,MAAMC,QAAiBC,YAAY,qCAC7BC,EAAOF,EAASE,KAED,OAAjBF,EAASG,MACX9B,EAAYe,KAAKC,OACjBnB,EAAS,UAAWgC,EAAKE,QAAS,MACzBJ,EAASG,MAClBjC,EACE,SACA8B,EAASG,KAAO,KAAOD,EAAKG,UAAY,IAAMH,EAAKE,QACnD,MAINE,IAEF,OACEC,IAAAC,cAAA,OAAKC,UAAU,kEACbF,IAAAC,cAAA,OAAKC,UAAU,kGACbF,IAAAC,cAAA,OAAKC,UAAU,6CACbF,IAAAC,cAAA,OAAKC,UAAU,2BACbF,IAAAC,cAAA,OACEE,cAAY,OACZD,UAAU,yCACVE,IAAKC,IACLC,IAAI,WAENN,IAAAC,cAAA,OACEE,cAAY,OACZD,UAAU,+CACVE,IAAKG,IACLD,IAAI,YAGRN,IAAAC,cAAA,QAAMC,UAAU,yDACdF,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,MAAIC,UAAU,+DAA8D,iBAG5EF,IAAAC,cAAA,KAAGC,UAAU,kBAAiB,4DAG9BF,IAAAC,cAACO,QAAK,CAACN,UAAU,QACfF,IAAAC,cAAA,YAAM,OACND,IAAAC,cAAA,OAAKC,UAAU,uDACbF,IAAAC,cAAA,SACEQ,IAAKvC,EACLgC,UAAU,6NAGVQ,YAAY,WAEdV,IAAAC,cAAA,UACEQ,IAAKrC,EACLuC,QAASjC,EACTkC,SAAU5C,EAAgB,EAC1BkC,UAAU,wPACX,qBACUlC,EAAgB,GAAK,KAAOA,EAAgB,QAI3DgC,IAAAC,cAAA,UACEC,UAAU,kNAGVS,QAnHOnB,UACnB,IACE,MAAMC,QAAiBoB,YAAc,8BAA+B,CAClEC,OAAQ,OACRC,KAAM7C,EAAO8C,QAAQC,QAEjBtB,EAAOF,EAASE,KACD,OAAjBF,EAASG,KACXvB,EAAS,QACAoB,EAASG,MAClBjC,EACE,SACA8B,EAASG,KAAO,KAAOD,EAAKG,UAAY,IAAMH,EAAKE,QACnD,KAGJ,MAAOqB,GACPC,QAAQD,MAAM,uBAAwBA,MAmG7B","file":"static/js/11.fc26e2ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-office.72742c2e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/login-office-dark.cb4a995f.jpeg\";","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport ImageLight from \"../../assets/img/login-office.jpeg\";\r\nimport ImageDark from \"../../assets/img/login-office-dark.jpeg\";\r\nimport { GithubIcon, TwitterIcon } from \"../../icons\";\r\nimport { Label, Input, Button } from \"@windmill/react-ui\";\r\nimport Cookie from \"js-cookie\";\r\nimport fetchWithAuth, { getWithAuth } from \"../../utils/callApi\";\r\nimport { useToast } from \"../../context/ToastContext\";\r\nimport { disableRightBtn, enableRightBtn } from \"../../utils/formValid\";\r\n\r\nfunction ConfirmEmail() {\r\n  const { addToast } = useToast();\r\n  const [lastSent, setLastSent] = useState(null);\r\n  const [timeRemaining, setTimeRemaining] = useState(0);\r\n  const optRef = useRef(\"\");\r\n  const btnRef = useRef();\r\n  const token = Cookie.get(\"token\");\r\n  const navigate = useNavigate();\r\n\r\n  const confirmClick = async () => {\r\n    try {\r\n      const response = await fetchWithAuth(\"Authentication/ConfirmEmail\", {\r\n        method: \"POST\",\r\n        body: optRef.current.value,\r\n      });\r\n      const data = response.data;\r\n      if (response.code == \"200\") {\r\n        navigate(\"/app\");\r\n      } else if (response.code) {\r\n        addToast(\r\n          \"danger\",\r\n          response.code + \": \" + data.errorCode + \"-\" + data.message,\r\n          10000\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    resendEmail();\r\n  }, []);\r\n  useEffect(() => {\r\n    const calculateTimeRemaining = () => {\r\n      if (lastSent) {\r\n        const elapsed = Date.now() - lastSent;\r\n        const remaining = parseInt(Math.max(0, 60000 - elapsed) / 1000); // 60000 ms = 1 minute\r\n        setTimeRemaining(remaining);\r\n        if (remaining > 0) {\r\n          disableRightBtn(btnRef);\r\n        } else {\r\n          enableRightBtn(btnRef);\r\n        }\r\n      }\r\n    };\r\n\r\n    calculateTimeRemaining();\r\n    const interval = setInterval(() => {\r\n      calculateTimeRemaining();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [lastSent]);\r\n  const resendEmail = () => {\r\n    if (timeRemaining > 0) {\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      const response = await getWithAuth(\"Authentication/ConfirmEmailInvoke\");\r\n      const data = response.data;\r\n\r\n      if (response.code == \"200\") {\r\n        setLastSent(Date.now());\r\n        addToast(\"success\", data.message, 30000);\r\n      } else if (response.code) {\r\n        addToast(\r\n          \"danger\",\r\n          response.code + \": \" + data.errorCode + \"-\" + data.message,\r\n          10000\r\n        );\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n  return (\r\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\r\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n          <div className=\"h-32 md:h-auto md:w-1/2\">\r\n            <img\r\n              aria-hidden=\"true\"\r\n              className=\"object-cover w-full h-full dark:hidden\"\r\n              src={ImageLight}\r\n              alt=\"Office\"\r\n            />\r\n            <img\r\n              aria-hidden=\"true\"\r\n              className=\"hidden object-cover w-full h-full dark:block\"\r\n              src={ImageDark}\r\n              alt=\"Office\"\r\n            />\r\n          </div>\r\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n            <div className=\"w-full\">\r\n              <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\r\n                Confirm Email\r\n              </h1>\r\n              <p className=\"text-green-500\">\r\n                We sent you an OTP to your email. Please check your mail\r\n              </p>\r\n              <Label className=\"mt-4\">\r\n                <span>Otp</span>\r\n                <div className=\"relative text-gray-500 focus-within:text-purple-600\">\r\n                  <input\r\n                    ref={optRef}\r\n                    className=\"block w-full pr-20 mt-1 text-sm text-black dark:text-gray-300 dark:border-gray-600 \r\n                    dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple \r\n                    dark:focus:shadow-outline-gray form-input\"\r\n                    placeholder=\"xxxxxx\"\r\n                  />\r\n                  <button\r\n                    ref={btnRef}\r\n                    onClick={resendEmail}\r\n                    disabled={timeRemaining > 0}\r\n                    className=\"absolute inset-y-0 right-0 px-4 text-sm font-medium leading-5 text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-r-md active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple\"\r\n                  >\r\n                    Gửi lại {timeRemaining > 0 && \" (\" + timeRemaining + \"s)\"}\r\n                  </button>\r\n                </div>\r\n              </Label>\r\n              <button\r\n                className=\"transition-colors duration-150 font-medium focus:outline-none  \r\n                py-2 rounded-lg text-sm text-white bg-purple-600 border-0 active:bg-purple-600 \r\n                hover:bg-purple-700 focus:shadow-outline-purple w-full mt-4\"\r\n                onClick={confirmClick}\r\n              >\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmEmail;\r\n"],"sourceRoot":""}