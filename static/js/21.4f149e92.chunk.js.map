{"version":3,"sources":["pages/Customer/CustomerManagement.js"],"names":["CustomerManagement","addToast","useToast","name","setName","useState","phone","setPhone","address","setAddress","search","setSearch","users","setUsers","currentPage","setCurrentPage","total","setTotal","isModalOpen","setIsModalOpen","modalAction","setModalAction","customerId","setCustomerId","columns","title","dataIndex","key","render","_","record","React","createElement","className","Button","onClick","UpdateCustomerBtnClick","id","fullName","phoneNumber","type","shape","searchData","async","pageIndex","arguments","length","undefined","pageSize","searchStr","response","getWithAuth","data","console","log","code","listWithKey","list","map","member","errorCode","message","error","useEffect","fetchAddCustomer","fetchWithAuth","body","PhoneNumber","Address","fetchUpdateCustomer","Id","Fragment","PageTitle","AddCustomerBtnClick","Card","Input","placeholder","onChange","e","target","value","btnSearchClick","size","Table","dataSource","pagination","Pagination","align","current","curpage","Modal","open","onOk","onCancel","closeModal","Label"],"mappings":"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","file":"static/js/21.4f149e92.chunk.js","sourcesContent":["import { replace } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Input,\n  Modal,\n  Pagination,\n  Select,\n  Space,\n  Table,\n} from \"antd\";\nimport fetchWithAuth, { fetchApi, getWithAuth } from \"../../utils/callApi\";\nimport { useToast } from \"../../context/ToastContext\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport { Label } from \"@windmill/react-ui\";\n\nconst PAGESIZE = 25;\nconst roleOption = [\n  { value: 1, code: \"Leader\", label: \"Leader\" },\n  { value: 2, code: \"Designer\", label: \"Designer\" },\n  { value: 3, code: \"Deliver\", label: \"Deliver\" },\n  { value: 4, code: \"Manager\", label: \"Manager\" },\n  { value: 5, code: \"Employee\", label: \"Employee\" },\n  { value: 6, code: \"Admin\", label: \"Admin\" },\n];\nconst CustomerManagement = () => {\n  const { addToast } = useToast();\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalAction, setModalAction] = useState(\"\");\n  const [customerId, setCustomerId] = useState(\"\");\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n      // render: (_, record) => <p>{record.age}</p>,\n    },\n    {\n      title: \"Họ và tên\",\n      dataIndex: \"fullName\",\n      key: \"fullName\",\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\",\n    },\n    {\n      title: \"Địa chỉ\",\n      dataIndex: \"address\",\n      key: \"address\",\n    },\n    {\n      title: \"\",\n      key: \"action\",\n      render: (_, record) => (\n        <div className=\"flex justify-end\">\n          <Button\n            onClick={() =>\n              UpdateCustomerBtnClick(\n                record.id,\n                record.fullName,\n                record.phoneNumber,\n                record.address\n              )\n            }\n            type=\"primary\"\n            shape=\"circle\"\n          >\n            <i className=\"fa-solid fa-pen-to-square\"></i>\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  const searchData = async (\n    pageIndex = currentPage - 1,\n    pageSize = PAGESIZE,\n    searchStr = search\n  ) => {\n    try {\n      const response = await getWithAuth(\n        \"Customer/GetAll?\" +\n          \"search=\" +\n          searchStr +\n          \"&pageIndex=\" +\n          pageIndex +\n          \"&pageSize=\" +\n          pageSize\n      );\n      const data = response.data;\n      console.log(data);\n\n      if (response.code == \"200\") {\n        const listWithKey = data.list.map((member) => ({\n          ...member,\n          key: member.id, // Hoặc sử dụng một thuộc tính duy nhất khác\n        }));\n        setTotal(data.total);\n        setUsers(listWithKey);\n      } else if (response.code) {\n        addToast(\n          \"danger\",\n          response.code + \": \" + data.errorCode + \"-\" + data.message,\n          10000\n        );\n      }\n    } catch (error) {}\n  };\n  const btnSearchClick = () => {\n    setCurrentPage(1);\n    searchData(currentPage - 1, PAGESIZE, search);\n  };\n  const onChange = (curpage, pageSize) => {\n    setCurrentPage(curpage);\n    searchData(curpage - 1, pageSize);\n  };\n  useEffect(() => {\n    searchData();\n  }, []);\n  const onModalOkClick = async () => {\n    if (modalAction === \"ADD\") {\n      await fetchAddCustomer();\n    } else if (modalAction === \"UPD\") {\n      await fetchUpdateCustomer();\n    }\n  };\n  const fetchAddCustomer = async () => {\n    try {\n      const response = await fetchWithAuth(\"Customer/AddCustomer\", {\n        body: { fullName: name, PhoneNumber: phone, Address: address },\n      });\n      const data = response.data;\n      if (response.code == \"200\") {\n        searchData();\n        addToast(\"success\", \"Thêm thành công\", 5000);\n        setIsModalOpen(false);\n      } else if (response.code) {\n        addToast(\n          \"danger\",\n          response.code + \": \" + data.errorCode + \"-\" + data.message,\n          10000\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchUpdateCustomer = async () => {\n    const response = await fetchWithAuth(\"Customer/UpdateCustomer\", {\n      body: {\n        Id: customerId,\n        fullName: name,\n        PhoneNumber: phone,\n        Address: address,\n      },\n    });\n    const data = response.data;\n    if (response.code == \"200\") {\n      searchData();\n      addToast(\"success\", \"Cập nhật thành công\", 5000);\n      setIsModalOpen(false);\n    } else if (response.code) {\n      addToast(\n        \"danger\",\n        response.code + \": \" + data.errorCode + \"-\" + data.message,\n        10000\n      );\n    }\n  };\n  const AddCustomerBtnClick = () => {\n    setModalAction(\"ADD\");\n    setName(\"\");\n    setAddress(\"\");\n    setPhone(\"\");\n    setIsModalOpen(true);\n  };\n  const UpdateCustomerBtnClick = (id, name = \"\", phone = \"\", address = \"\") => {\n    setModalAction(\"UPD\");\n    setCustomerId(id);\n    setName(name);\n    setAddress(address);\n    setPhone(phone);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <>\n      <div className=\" flex justify-between\">\n        <PageTitle>Danh sách khách hàng</PageTitle>\n        <button\n          onClick={AddCustomerBtnClick}\n          className=\"bg-purple-700 h-12 self-center rounded-lg px-4 text-white\"\n        >\n          <i className=\"fa-solid fa-plus mr-2\"></i>Thêm mới\n        </button>\n      </div>\n      <Card className=\"shadow-md border-0\">\n        <Input\n          className=\"mb-3 p-2 w-1/2 mr-3\"\n          type=\"text\"\n          placeholder=\"Tên khách hàng\"\n          onChange={(e) => setSearch(e.target.value)}\n          value={search}\n        ></Input>\n        <Button\n          onClick={btnSearchClick}\n          type=\"primary\"\n          size=\"large\"\n          className=\"h-full\"\n        >\n          <i className=\"fa-solid fa-magnifying-glass\"></i> Tìm kiếm\n        </Button>\n        <Table columns={columns} dataSource={users} pagination={false} />\n        <Pagination\n          className=\"mt-2\"\n          align=\"end\"\n          current={currentPage}\n          onChange={onChange}\n          total={total}\n          pageSize={PAGESIZE}\n        />\n      </Card>\n      <Modal\n        title=\"Basic Modal\"\n        open={isModalOpen}\n        onOk={onModalOkClick}\n        onCancel={closeModal}\n      >\n        <Label>\n          <span>Tên khách hàng</span>\n          <Input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"mt-1\"\n            type=\"username\"\n            placeholder=\"Nguyễn Văn A\"\n          />\n        </Label>\n        <Label className=\"mt-4\">\n          <span>Số điện thoại</span>\n          <Input\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            className=\"mt-1\"\n            type=\"email\"\n            placeholder=\"0987653321\"\n          />\n        </Label>\n        <Label className=\"mt-4\">\n          <span>Địa chỉ</span>\n          <Input\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            className=\"mt-1\"\n            type=\"email\"\n            placeholder=\"Hà Nội\"\n          />\n        </Label>\n      </Modal>\n    </>\n  );\n};\nexport default CustomerManagement;\n"],"sourceRoot":""}