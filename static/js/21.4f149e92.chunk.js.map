{"version":3,"sources":["pages/Customer/CustomerManagement.js"],"names":["CustomerManagement","addToast","useToast","name","setName","useState","phone","setPhone","address","setAddress","search","setSearch","users","setUsers","currentPage","setCurrentPage","total","setTotal","isModalOpen","setIsModalOpen","modalAction","setModalAction","customerId","setCustomerId","columns","title","dataIndex","key","render","_","record","React","createElement","className","Button","onClick","UpdateCustomerBtnClick","id","fullName","phoneNumber","type","shape","searchData","async","pageIndex","arguments","length","undefined","pageSize","searchStr","response","getWithAuth","data","console","log","code","listWithKey","list","map","member","errorCode","message","error","useEffect","fetchAddCustomer","fetchWithAuth","body","PhoneNumber","Address","fetchUpdateCustomer","Id","Fragment","PageTitle","AddCustomerBtnClick","Card","Input","placeholder","onChange","e","target","value","btnSearchClick","size","Table","dataSource","pagination","Pagination","align","current","curpage","Modal","open","onOk","onCancel","closeModal","Label"],"mappings":"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","file":"static/js/21.4f149e92.chunk.js","sourcesContent":["import { replace } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Input,\r\n  Modal,\r\n  Pagination,\r\n  Select,\r\n  Space,\r\n  Table,\r\n} from \"antd\";\r\nimport fetchWithAuth, { fetchApi, getWithAuth } from \"../../utils/callApi\";\r\nimport { useToast } from \"../../context/ToastContext\";\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst PAGESIZE = 25;\r\nconst roleOption = [\r\n  { value: 1, code: \"Leader\", label: \"Leader\" },\r\n  { value: 2, code: \"Designer\", label: \"Designer\" },\r\n  { value: 3, code: \"Deliver\", label: \"Deliver\" },\r\n  { value: 4, code: \"Manager\", label: \"Manager\" },\r\n  { value: 5, code: \"Employee\", label: \"Employee\" },\r\n  { value: 6, code: \"Admin\", label: \"Admin\" },\r\n];\r\nconst CustomerManagement = () => {\r\n  const { addToast } = useToast();\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalAction, setModalAction] = useState(\"\");\r\n  const [customerId, setCustomerId] = useState(\"\");\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      // render: (_, record) => <p>{record.age}</p>,\r\n    },\r\n    {\r\n      title: \"Họ và tên\",\r\n      dataIndex: \"fullName\",\r\n      key: \"fullName\",\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: \"phoneNumber\",\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <div className=\"flex justify-end\">\r\n          <Button\r\n            onClick={() =>\r\n              UpdateCustomerBtnClick(\r\n                record.id,\r\n                record.fullName,\r\n                record.phoneNumber,\r\n                record.address\r\n              )\r\n            }\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n          >\r\n            <i className=\"fa-solid fa-pen-to-square\"></i>\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const searchData = async (\r\n    pageIndex = currentPage - 1,\r\n    pageSize = PAGESIZE,\r\n    searchStr = search\r\n  ) => {\r\n    try {\r\n      const response = await getWithAuth(\r\n        \"Customer/GetAll?\" +\r\n          \"search=\" +\r\n          searchStr +\r\n          \"&pageIndex=\" +\r\n          pageIndex +\r\n          \"&pageSize=\" +\r\n          pageSize\r\n      );\r\n      const data = response.data;\r\n      console.log(data);\r\n\r\n      if (response.code == \"200\") {\r\n        const listWithKey = data.list.map((member) => ({\r\n          ...member,\r\n          key: member.id, // Hoặc sử dụng một thuộc tính duy nhất khác\r\n        }));\r\n        setTotal(data.total);\r\n        setUsers(listWithKey);\r\n      } else if (response.code) {\r\n        addToast(\r\n          \"danger\",\r\n          response.code + \": \" + data.errorCode + \"-\" + data.message,\r\n          10000\r\n        );\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  const btnSearchClick = () => {\r\n    setCurrentPage(1);\r\n    searchData(currentPage - 1, PAGESIZE, search);\r\n  };\r\n  const onChange = (curpage, pageSize) => {\r\n    setCurrentPage(curpage);\r\n    searchData(curpage - 1, pageSize);\r\n  };\r\n  useEffect(() => {\r\n    searchData();\r\n  }, []);\r\n  const onModalOkClick = async () => {\r\n    if (modalAction === \"ADD\") {\r\n      await fetchAddCustomer();\r\n    } else if (modalAction === \"UPD\") {\r\n      await fetchUpdateCustomer();\r\n    }\r\n  };\r\n  const fetchAddCustomer = async () => {\r\n    try {\r\n      const response = await fetchWithAuth(\"Customer/AddCustomer\", {\r\n        body: { fullName: name, PhoneNumber: phone, Address: address },\r\n      });\r\n      const data = response.data;\r\n      if (response.code == \"200\") {\r\n        searchData();\r\n        addToast(\"success\", \"Thêm thành công\", 5000);\r\n        setIsModalOpen(false);\r\n      } else if (response.code) {\r\n        addToast(\r\n          \"danger\",\r\n          response.code + \": \" + data.errorCode + \"-\" + data.message,\r\n          10000\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const fetchUpdateCustomer = async () => {\r\n    const response = await fetchWithAuth(\"Customer/UpdateCustomer\", {\r\n      body: {\r\n        Id: customerId,\r\n        fullName: name,\r\n        PhoneNumber: phone,\r\n        Address: address,\r\n      },\r\n    });\r\n    const data = response.data;\r\n    if (response.code == \"200\") {\r\n      searchData();\r\n      addToast(\"success\", \"Cập nhật thành công\", 5000);\r\n      setIsModalOpen(false);\r\n    } else if (response.code) {\r\n      addToast(\r\n        \"danger\",\r\n        response.code + \": \" + data.errorCode + \"-\" + data.message,\r\n        10000\r\n      );\r\n    }\r\n  };\r\n  const AddCustomerBtnClick = () => {\r\n    setModalAction(\"ADD\");\r\n    setName(\"\");\r\n    setAddress(\"\");\r\n    setPhone(\"\");\r\n    setIsModalOpen(true);\r\n  };\r\n  const UpdateCustomerBtnClick = (id, name = \"\", phone = \"\", address = \"\") => {\r\n    setModalAction(\"UPD\");\r\n    setCustomerId(id);\r\n    setName(name);\r\n    setAddress(address);\r\n    setPhone(phone);\r\n    setIsModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\" flex justify-between\">\r\n        <PageTitle>Danh sách khách hàng</PageTitle>\r\n        <button\r\n          onClick={AddCustomerBtnClick}\r\n          className=\"bg-purple-700 h-12 self-center rounded-lg px-4 text-white\"\r\n        >\r\n          <i className=\"fa-solid fa-plus mr-2\"></i>Thêm mới\r\n        </button>\r\n      </div>\r\n      <Card className=\"shadow-md border-0\">\r\n        <Input\r\n          className=\"mb-3 p-2 w-1/2 mr-3\"\r\n          type=\"text\"\r\n          placeholder=\"Tên khách hàng\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          value={search}\r\n        ></Input>\r\n        <Button\r\n          onClick={btnSearchClick}\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          className=\"h-full\"\r\n        >\r\n          <i className=\"fa-solid fa-magnifying-glass\"></i> Tìm kiếm\r\n        </Button>\r\n        <Table columns={columns} dataSource={users} pagination={false} />\r\n        <Pagination\r\n          className=\"mt-2\"\r\n          align=\"end\"\r\n          current={currentPage}\r\n          onChange={onChange}\r\n          total={total}\r\n          pageSize={PAGESIZE}\r\n        />\r\n      </Card>\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        open={isModalOpen}\r\n        onOk={onModalOkClick}\r\n        onCancel={closeModal}\r\n      >\r\n        <Label>\r\n          <span>Tên khách hàng</span>\r\n          <Input\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"mt-1\"\r\n            type=\"username\"\r\n            placeholder=\"Nguyễn Văn A\"\r\n          />\r\n        </Label>\r\n        <Label className=\"mt-4\">\r\n          <span>Số điện thoại</span>\r\n          <Input\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            className=\"mt-1\"\r\n            type=\"email\"\r\n            placeholder=\"0987653321\"\r\n          />\r\n        </Label>\r\n        <Label className=\"mt-4\">\r\n          <span>Địa chỉ</span>\r\n          <Input\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            className=\"mt-1\"\r\n            type=\"email\"\r\n            placeholder=\"Hà Nội\"\r\n          />\r\n        </Label>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default CustomerManagement;\r\n"],"sourceRoot":""}